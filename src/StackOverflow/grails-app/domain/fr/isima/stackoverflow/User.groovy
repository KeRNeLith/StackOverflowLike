package fr.isima.stackoverflow

import groovy.transform.EqualsAndHashCode
import groovy.transform.ToString

import fr.isima.stackoverflow.Question
import fr.isima.stackoverflow.Answer

@EqualsAndHashCode(includes='username')
@ToString(includes='username', includeNames=true, includePackage=false)
class User implements Serializable 
{
	// Attributes
	private static final long serialVersionUID = 1

	transient springSecurityService

	// Auto-Generated by Spring Security Core Plugin
	String username
	String password
	boolean enabled = true
	boolean accountExpired
	boolean accountLocked
	boolean passwordExpired

	// Custom fields
	String firstName
	String lastName
	String description
	Date registerDate
	Integer reputation

	// Constraints
	static transients = ['springSecurityService']

	static constraints = {
		password blank: false, password: true
		username blank: false, unique: true
		description maxSize: 2500
	}

	static mapping = {
		password column: '`password`'
	}
	
	// Relations
	static hasMany = [questions: Question, answers: Answer, votes: Vote]
	
	// Member functions
	Set<Role> getAuthorities() 
	{
		UserRole.findAllByUser(this)*.role
	}

	def beforeInsert() 
	{
		encodePassword()
	}

	def beforeUpdate() 
	{
		if (isDirty('password')) 
		{
			encodePassword()
		}
	}

	protected void encodePassword() 
	{
		password = springSecurityService?.passwordEncoder ? springSecurityService.encodePassword(password) : password
	}
}
